[{"/Users/austinjevans/Desktop/lego_control/client_web/src/index.js":"1","/Users/austinjevans/Desktop/lego_control/client_web/src/App.js":"2","/Users/austinjevans/Desktop/lego_control/client_web/src/NavBar.js":"3","/Users/austinjevans/Desktop/lego_control/client_web/src/ControlPointStatus.js":"4","/Users/austinjevans/Desktop/lego_control/client_web/src/AllLights.js":"5"},{"size":670,"mtime":1629858534721,"results":"6","hashOfConfig":"7"},{"size":553,"mtime":1629858587867,"results":"8","hashOfConfig":"7"},{"size":268,"mtime":1629852530575,"results":"9","hashOfConfig":"7"},{"size":1803,"mtime":1629858646515,"results":"10","hashOfConfig":"7"},{"size":1678,"mtime":1629860057766,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7g3kab",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/austinjevans/Desktop/lego_control/client_web/src/index.js",[],"/Users/austinjevans/Desktop/lego_control/client_web/src/App.js",[],"/Users/austinjevans/Desktop/lego_control/client_web/src/NavBar.js",[],"/Users/austinjevans/Desktop/lego_control/client_web/src/ControlPointStatus.js",[],"/Users/austinjevans/Desktop/lego_control/client_web/src/AllLights.js",["23"],"import { gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { Form, Button, Card } from 'react-bootstrap';\n\nconst ALL_LIGHTS_BRIGHTNESS_MUTATION = gql`\nmutation AllLightsBrightnessMutation($brightness: Int!) {\n    allLightsBrightnessMutation(brightness: $brightness) {\n      brightness\n      lightStrips {\n        name\n        id\n      }\n    }\n  }\n`\n\nfunction AllLights() {\n    let range;\n    const [changeBrightness, { error, data }] = useMutation(ALL_LIGHTS_BRIGHTNESS_MUTATION);\n\n    if (error) return `Error! ${error.message}`;\n\n    const brightness = data !== undefined ? data.allLightsBrightnessMutation.brightness : 50;\n\n    return (\n        <Card className=\"h-100\">\n            <Card.Body>\n            <Card.Title>All Lights</Card.Title>\n            \n            <Form>\n                <div className=\"on-off-buttons d-grid gap-2\">\n                <Button variant=\"primary\" size=\"lg\" onClick={ e => {\n                    e.preventDefault();\n                    changeBrightness({ variables: { brightness: 100 }});\n                }}>On</Button>\n                <Button variant=\"secondary\" size=\"lg\" onClick={ e => {\n                    e.preventDefault();\n                    changeBrightness({ variables: { brightness: 0 }});\n                }}>Off</Button>\n                </div>\n            \n                <Form.Label>Brightness</Form.Label>\n                <Form.Range ref={node => { range = node; }} onChange={ e => {\n                    changeBrightness({ variables: { brightness: e.target.value }});\n                }} value={brightness}/>\n            </Form>\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default AllLights;",{"ruleId":"24","severity":1,"message":"25","line":43,"column":44,"nodeType":"26","messageId":"27","endLine":43,"endColumn":49},"no-unused-vars","'range' is assigned a value but never used.","Identifier","unusedVar"]