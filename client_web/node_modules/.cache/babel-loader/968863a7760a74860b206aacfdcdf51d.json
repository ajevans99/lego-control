{"ast":null,"code":"var _jsxFileName = \"/Users/austinjevans/Desktop/lego_control/client_web/src/ControlPointStatus.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useQuery } from '@apollo/client';\nimport React from 'react';\nimport { Card, Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTROL_POINT_STATUS_QUERY = gql`\nquery ControlPointStatusQuery {\n    allControlPoints {\n      edges {\n        node {\n          name\n          online\n        }\n      }\n    }\n  }\n`;\n\nfunction ControlPointStatus() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(CONTROL_POINT_STATUS_QUERY);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"h-100\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"Control Point Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        children: \"All Raspberry Pi's are responding.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        className: \"control-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.allControlPoints.edges.map(node => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: node.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"led-box\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: `led-${node.online ? 'green' : 'yellow'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ControlPointStatus, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = ControlPointStatus;\nexport default ControlPointStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlPointStatus\");","map":{"version":3,"sources":["/Users/austinjevans/Desktop/lego_control/client_web/src/ControlPointStatus.js"],"names":["gql","useQuery","React","Card","Table","CONTROL_POINT_STATUS_QUERY","ControlPointStatus","loading","error","data","message","allControlPoints","edges","map","node","name","online"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,iBAA5B;;AAEA,MAAMC,0BAA0B,GAAGL,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAaA,SAASM,kBAAT,GAA8B;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BR,QAAQ,CAACI,0BAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAEX,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,IAAD,CAAM,QAAN;AAAe,QAAA,SAAS,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,KAAK,MAA7B;AAA8B,QAAA,SAAS,EAAC,eAAxC;AAAA,gCACI;AAAA,iCACA;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAA,oBACKD,IAAI,CAACE,gBAAL,CAAsBC,KAAtB,CAA4BC,GAA5B,CAAiCC,IAAI,iBAClC;AAAA,oCACI;AAAA,wBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,qCACA;AAAK,gBAAA,KAAK,EAAC,SAAX;AAAA,uCACI;AAAK,kBAAA,KAAK,EAAG,OAAMD,IAAI,CAACE,MAAL,GAAc,OAAd,GAAwB,QAAS;AAApD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GAlCQV,kB;UAC4BL,Q;;;KAD5BK,kB;AAoCT,eAAeA,kBAAf","sourcesContent":["import { gql, useQuery } from '@apollo/client';\nimport React from 'react';\nimport { Card, Table } from 'react-bootstrap';\n\nconst CONTROL_POINT_STATUS_QUERY = gql`\nquery ControlPointStatusQuery {\n    allControlPoints {\n      edges {\n        node {\n          name\n          online\n        }\n      }\n    }\n  }\n`\n\nfunction ControlPointStatus() {\n    const { loading, error, data } = useQuery(CONTROL_POINT_STATUS_QUERY);\n\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`\n\n    return (\n        <Card className=\"h-100\">\n            <Card.Body>\n            <Card.Title>Control Point Status</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">All Raspberry Pi's are responding.</Card.Subtitle>\n            <Table striped bordered hover className=\"control-table\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Status</th>\n                </tr>\n                </thead>\n                <tbody>\n                    {data.allControlPoints.edges.map( node => (\n                        <tr>\n                            <td>{node.name}</td>\n                            <td>\n                            <div class=\"led-box\">\n                                <div class={`led-${node.online ? 'green' : 'yellow'}`}></div>\n                            </div>\n                        </td>\n                    </tr> \n                    ))}\n                </tbody>\n            </Table>\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default ControlPointStatus;\n"]},"metadata":{},"sourceType":"module"}